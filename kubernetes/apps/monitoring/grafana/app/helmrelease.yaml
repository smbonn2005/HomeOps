---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 7.3.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
    - name: nginx-internal
      namespace: networking
  values:
    deploymentStrategy:
      type: Recreate
    admin:
      existingSecret: grafana-admin-secret
    env:
      GF_EXPLORE_ENABLED: true
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_DOMAIN}"
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            isDefault: true
    dashboards:
      default:
        pal-exporter:
          gnetId: 20421 # https://grafana.com/grafana/dashboards/20421?tab=revisions
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
      kubernetes:
        api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 16761
          revision: 15
          datasource: Prometheus
        coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 17
          datasource: Prometheus
        global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 37
          datasource: Prometheus
        namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 34
          datasource: Prometheus
        nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 29
          datasource: Prometheus
        pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 26
          datasource: Prometheus
      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        speedtest-exporter-hub:
          # renovate: depName="Speedtest-Exporter"
          gnetId: 13665
          revision: 4
          datasource:
            - {name: DS_PROMETHEUS, value: Prometheus}
        external-dns:
          # renovate: depName="External-DNS"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        cloudflared:
          gnetId: 17457 # https://grafana.com/grafana/dashboards/17457?tab=revisions
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      storage:
        cnpg-dashboard:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/v1.21.0/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
        redis:
          # renovate: depName="Redis"
          gnetId: 11835
          revision: 1
          datasource: Prometheus
      system:
        node-exporter:
          # renovate: depName="Node Exporter"
          gnetId: 11074
          revision: 9
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 32
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/icon: grafana.png
        gethomepage.dev/name: Grafana
        gethomepage.dev/group: Observability
        gethomepage.dev/widget.type: grafana
        gethomepage.dev/widget.url: http://grafana.monitoring
        gethomepage.dev/widget.username: '{{`{{HOMEPAGE_VAR_GRAFANA_USERNAME}}`}}'
        gethomepage.dev/widget.password: '{{`{{HOMEPAGE_VAR_GRAFANA_PASSWORD}}`}}'
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      storageClassName: longhorn
    testFramework:
      enabled: false
