---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: 'true'
    image:
      repository: ghcr.io/onedr0p/readarr-develop
      tag: 0.3.5.2217@sha256:01b7c2def833636099e0555778a92053c292e992a90de3e1a3f001804c28ed7c
    env:
      TZ: America/New_York
      READARR__INSTANCE_NAME: Readarr
      READARR__PORT: &port 80
      READARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
      READARR__LOG_LEVEL: info
      READARR__API_KEY: ${SECRET_READARR_KEY}
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: 'nginx'
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host '{{ .Release.Name }}.${SECRET_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 15Gi
        storageClass: longhorn
    persistence:
      media:
        enabled: true
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: ${SECRET_NFS_MEDIA}
        mountPath: /media
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
