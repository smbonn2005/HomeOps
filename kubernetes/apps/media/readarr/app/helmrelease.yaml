---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controllers:
      main:
        type: statefulset
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 15Gi
              storageClass: longhorn
              globalMounts:
                - path: /config
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/readarr-develop
              tag: 0.3.14.2348@sha256:33fc965dff66c1475671e61106e6f8719f2da3501957cba142e1db0ff92dde36
            env:
              TZ: America/New_York
              READARR__INSTANCE_NAME: Readarr
              READARR__PORT: &port 80
              READARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              READARR__LOG_LEVEL: info
              READARR__API_KEY: ${SECRET_READARR_KEY}
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: 'nginx'
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host '{{ .Release.Name }}.${SECRET_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      media:
        enabled: true
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: ${SECRET_NFS_MEDIA}
        mountPath: /media
