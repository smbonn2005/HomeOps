---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pterodactyl
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: redis
      namespace: databases
    - name: mariadb
      namespace: databases
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: storage
  values:
    controllers:
      pterodactyl:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/pterodactyl/panel
              tag: v1.11.10@sha256:6c9d060396c0a2c273aa5573460ed51f9176016dac59608b414a3cb02b0cc30c
            env:
              DB_HOST: ${SECRET_MARIADB_URL}
              DB_PORT: 3306
              DB_DATABASE: "panel"
              DB_USERNAME: "pterodactyl"
              DB_PASSWORD: ${PTERODACTYL_MARIADB_PASSWORD}
              REDIS_HOST: ${SECRET_REDIS_URL}
              CACHE_DRIVER: "redis"
              SESSION_DRIVER: "redis"
              QUEUE_DRIVER: "redis"
              APP_URL: "https://pterodactyl.${SECRET_DOMAIN}"
              APP_ENV: "production"
              APP_ENVIRONMENT_ONLY: "false"
              APP_TIMEZONE: America/New_York
              APP_SERVICE_AUTHOR: ${PTERODACTYL_APP_EMAIL}
              TRUSTED_PROXIES: "*"
            resources:
              requests:
                cpu: 50m
                memory: 300M
              limits:
                memory: 500M
    service:
      app:
        controller: *app
        ports:
          http:
            port: 80
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, OPTIONS"
          nginx.ingress.kubernetes.io/cors-allow-headers: "*"
          nginx.ingress.kubernetes.io/cors-allow-origin: "*"
          nginx.ingress.kubernetes.io/cors-max-age: "100"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            more_set_input_headers X-Forwarded-Proto "https";
            more_set_headers X-Forwarded-Proto "https";
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: pterodactyl.png
          gethomepage.dev/name: Pterodactyl
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/widget.type: pterodactyl
          gethomepage.dev/widget.url: http://pterodactyl.default
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_PTERODACTYL_KEY}}`}}"
        hosts:
          - host: &host "pterodactyl.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      data:
        enabled: true
        existingClaim: *app
        advancedMounts:
          pterodactyl:
            app:
              - subPath: "data"
                path: "/app/var"
              - subPath: "nginx"
                path: "/etc/nginx/http.d"
              - subPath: "logs"
                path: "/app/storage/logs"
