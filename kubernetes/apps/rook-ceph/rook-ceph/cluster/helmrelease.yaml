---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.16.4
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: storage
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: internal
        host:
          name: &host rook.smbonn.me
          path: /
        tls:
          - hosts: [*host]
    toolbox:
      enabled: true
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard: = "true" # quote (TODO: bdev_async_discard_threads with 19.2.1)
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module
        mgr:
          mgr/crash/warn_recent_interval: "7200" # 2h
      cephVersion:
        image: quay.io/ceph/ceph:v19.2.0@sha256:200087c35811bf28e8a8073b15fa86c07cce85c575f1ccd62d1d6ddbfdc6770a
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: true
        useAllDevices: true
        deviceFilter: nvme0n1
        config:
          osdsPerDevice: "1"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    # NOTE: After disabling the filesystem, the filesystem can be removed with the following commands:
    # ceph fs fail ceph-filesystem && ceph fs rm ceph-filesystem --yes-i-really-mean-it
    cephFileSystems: []
    #   - name: &cephFileSystemName ceph-filesystem
    #     spec:
    #       metadataPool:
    #         replicated:
    #           size: 3
    #       dataPools:
    #         - failureDomain: host
    #           replicated:
    #             size: 3
    #           name: data0
    #       metadataServer:
    #         activeCount: 1
    #         activeStandby: true
    #         priorityClassName: system-cluster-critical
    #         placement:
    #           topologySpreadConstraints:
    #             - maxSkew: 1
    #               topologyKey: kubernetes.io/hostname
    #               whenUnsatisfiable: DoNotSchedule
    #               labelSelector:
    #                 matchLabels:
    #                   app.kubernetes.io/name: ceph-mds
    #                   app.kubernetes.io/part-of: *cephFileSystemName
    #         resources:
    #           requests:
    #             cpu: 100m
    #             memory: 1Gi
    #           limits:
    #             memory: 4Gi
    #     storageClass:
    #       enabled: true
    #       isDefault: false
    #       name: ceph-filesystem
    #       pool: data0
    #       reclaimPolicy: Delete
    #       allowVolumeExpansion: true
    #       volumeBindingMode: Immediate
    #       parameters:
    #         csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
    #         csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
    #         csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
    #         csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
    #         csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
    #         csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
    #         csi.storage.k8s.io/fstype: ext4
    # cephFileSystemVolumeSnapshotClass:
    #   enabled: true
    #   name: csi-ceph-filesystem
    #   isDefault: false
    #   deletionPolicy: Delete
    cephObjectStores: []
    #   - name: ceph-objectstore
    #     spec:
    #       metadataPool:
    #         failureDomain: host
    #         replicated:
    #           size: 3
    #       dataPool:
    #         failureDomain: host
    #         erasureCoded:
    #           dataChunks: 2
    #           codingChunks: 1
    #       preservePoolsOnDelete: true
    #       gateway:
    #         port: 80
    #         resources:
    #           requests:
    #             cpu: 100m
    #             memory: 1Gi
    #           limits:
    #             memory: 2Gi
    #         instances: 2
    #         priorityClassName: system-cluster-critical
    #       healthCheck:
    #         bucket:
    #           interval: 60s
    #     storageClass:
    #       enabled: true
    #       name: ceph-bucket
    #       reclaimPolicy: Delete
    #       volumeBindingMode: Immediate
    #       parameters:
    #         region: us-east-1
    #     ingress:
    #       enabled: true
    #       ingressClassName: internal
    #       annotations:
    #         gethomepage.dev/enabled: "true"
    #         gethomepage.dev/app: ceph-mgr
    #         gethomepage.dev/icon: ceph.png
    #         gethomepage.dev/name: Rook-Ceph
    #         gethomepage.dev/description: K3S Cluster Storage
    #         gethomepage.dev/group: Infrastructure
    #         gethomepage.dev/href: http://rook.smbonn.me
    #       host:
    #         name: &host rgw.smbonn.me
    #         path: /
    #       tls:
    #         - hosts: [*host]
